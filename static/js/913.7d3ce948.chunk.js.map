{"version":3,"file":"static/js/913.7d3ce948.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MovieCast/MovieCast.module.css?c01c","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '0ea25c224ecd0097d95288cc73c0f999';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst imgURL = 'https://image.tmdb.org/t/p/w200';\n\n//to get the list of the most popular movies for today\nexport const getMovies = (query) => {\n  let url;\n  if (query) {\n    url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n  } else {\n    url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  }\n  return axios.get(url);\n};\n\n//to get full information about the film\nexport const getMovieDetails = async movieId => {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const {\n      genres,\n      id,\n      poster_path,\n      release_date = '',\n      title,\n      vote_average,\n      overview,\n    } = response.data;\n\n    return {\n      id,\n      poster_path: `${imgURL}${poster_path}`,\n      title: `${title} (${release_date.slice(0, 4)})`,\n      userScore: `${Math.round(vote_average * 10)}%`,\n      overview,\n      genres: genres.map(genre => genre.name).join(' '),\n    };\n};\n\n// information about the film cast\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    const { cast } = response.data;\n\n    return cast.map(({ id, name, profile_path, character }) => ({\n      id,\n      name,\n      character,\n      photo: profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}` : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`,\n    }));\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    return [];\n  }\n};\n\n// information about the film reviews\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    const { results } = response.data;\n    return results.map(({ id, author, content }) => ({id, author, content }));\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    return [];\n  }\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"listCast\":\"MovieCast_listCast__1fR4A\",\"photoActor\":\"MovieCast_photoActor__IuZBf\"};","import React, { useState, useEffect } from 'react';\nimport { getMovieCredits } from 'api/api.js';\nimport { useParams } from 'react-router-dom';\nimport css from './MovieCast.module.css';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n    \n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits);\n      } catch (error) {\n          console.error('Error fetching movie credits:', error);\n      }\n    };\n  \n    fetchMovieCredits();\n  }, [movieId]);\n    \n  return (<div> \n    <ul className={css.listCast}>\n      {cast.map(({ id, name, photo, character }) => (\n        <li key={id}>\n          {photo && <img className={css.photoActor} src={photo} alt={name} />}\n          <p>Actor: {name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default MovieCast; "],"names":["API_KEY","BASE_URL","getMovies","query","url","concat","axios","getMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","_response$data","genres","id","poster_path","_response$data$releas","release_date","title","vote_average","overview","_context","prev","next","sent","data","abrupt","slice","userScore","Math","round","map","genre","name","join","stop","_x","apply","arguments","getMovieCredits","_ref2","_callee2","cast","_context2","_ref3","profile_path","character","photo","t0","console","error","_x2","getMovieReviews","_ref4","_callee3","results","_context3","_ref5","author","content","_x3","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchMovieCredits","credits","_jsx","children","className","css","_jsxs","src","alt"],"sourceRoot":""}